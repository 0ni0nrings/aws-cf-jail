{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation jail",
  "Resources": {
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "all",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Sid": "1",
              "Effect": "Allow",
              "Action": "*",
              "Resource": "*"
            }]
          }
        }]
      }
    },
    "LambdaCreateStack": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {"Fn::Join" : ["\n", [
            "var AWS = require('aws-sdk');",
            "AWS.config.update({region: 'us-east-1'});",
            "var cloudformation = new AWS.CloudFormation();",
            "function wrapper(fn) {",
            "  return function(event, context) {",
            "    console.log(fn, '(): ', event);",
            "    cloudformation[fn](event, function(err, data) {",
            "      if (err) {",
            "        context.fail(err);",
            "      } else {",
            "        context.succeed(data);",
            "      }",
            "    });",
            "  };",
            "}",
            "exports.createStack = wrapper('createStack');",
            "exports.deleteStack = wrapper('deleteStack');",
            "exports.updateStack = wrapper('updateStack');"
          ]]}
        },
        "Description": "Lambda.CreateStack",
        "Handler": "index.createStack",
        "Role": {"Fn::GetAtt": ["LambdaRole", "Arn"]},
        "Runtime": "nodejs",
        "MemorySize": 128,
        "Timeout": 30
      }
    }
  }
}